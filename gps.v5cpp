{"mode":"Text","hardwareTarget":"brain","textContent":"#pragma region VEXcode Generated Robot Configuration\n// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\ngps GPS19 = gps(PORT19, 0.00, 0.00, mm, 180);\n\n\n// generating and setting random seed\nvoid initializeRandomSeed(){\n  int systemTime = Brain.Timer.systemHighResolution();\n  double batteryCurrent = Brain.Battery.current();\n  double batteryVoltage = Brain.Battery.voltage(voltageUnits::mV);\n\n  // Combine these values into a single integer\n  int seed = int(batteryVoltage + batteryCurrent * 100) + systemTime;\n\n  // Set the seed\n  srand(seed);\n}\n\n\n\nvoid vexcodeInit() {\n\n  //Initializing random seed.\n  initializeRandomSeed(); \n}\n\n\n// Helper to make playing sounds from the V5 in VEXcode easier and\n// keeps the code cleaner by making it clear what is happening.\nvoid playVexcodeSound(const char *soundName) {\n  printf(\"VEXPlaySound:%s\\n\", soundName);\n  wait(5, msec);\n}\n\n#pragma endregion VEXcode Generated Robot Configuration\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Create a Brain object for output\nbrain Brain;\n\n// Initialize the GPS Sensor on PORT 19\ngps GPS1 = gps(PORT19);\n\nint main() {\n    while (true) {\n        // Get X, Y, and heading from GPS\n        double x = GPS1.xPosition(mm);\n        double y = GPS1.yPosition(mm);\n        double heading = GPS1.heading();\n\n        // Print to Brain screen\n        Brain.Screen.clearScreen();\n        Brain.Screen.setCursor(2, 2);\n        Brain.Screen.print(\"X: %.2f mm\", x);\n        Brain.Screen.setCursor(3, 2);\n        Brain.Screen.print(\"Y: %.2f mm\", y);\n        Brain.Screen.setCursor(4, 2);\n        Brain.Screen.print(\"Heading: %.2f deg\", heading);\n\n        // Print to Terminal (if connected via USB)\n        printf(\"X: %.2f mm, Y: %.2f mm, Heading: %.2f deg\\n\", x, y, heading);\n\n        // Delay for stability\n        wait(500, msec);\n    }\n}\n","textLanguage":"cpp","robotConfig":[{"port":[19],"name":"GPS19","customName":false,"deviceType":"GPS","deviceClass":"gps","setting":{"xOffset":"0","xOffsetUnit":"mm","yOffset":"0","yOffsetUnit":"mm","thetaOffset":"180"}}],"slot":0,"platform":"V5","sdkVersion":"20240802.15.00.00","appVersion":"4.0.8","fileFormat":"2.0.0","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false}